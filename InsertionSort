插入排序   Time: O(n^2), Space: O(1)

插入排序的核心思想是，始终在数组的较低位置维护一个已排序的子数组，然后将剩下未排序数组的元素依次插入已排序的子数组的正确位置中。
假设我们现在有一个数组：alist = [7, 9, 3, 1, 5]
首先我们假设 7 这个位置是已排好序的，[9, 3, 1, 5] 尚未排序

然后我们从[9, 3, 1, 5]开始遍历（由左到右）：
第一次，发现 9 > 7，所以9的位置不动。已排序数组：[7, 9], 未排序数组：[3, 1, 5]
第二次，发现 3 < 9，所以3放到[7, 9]之间。然后又发现 3 < 7，所以有了[3, 7, 9]这个子数组
……
最后直到所有元素都正确排序为止

def insertSort(alist):
  for i in range(1, len(alist)):                # 从1（也就是数组第二个元素）开始是因为，我们假设只有一个元素时，是已排序的
    curr = alist[i]                             # 当前元素值
    curr_index = i                              # 当前元素索引
    while curr_index > 0 and curr < alist[curr_index-1]:  # 如果当前元素索引有意义，且当前元素值小于 其之前一个元素的值
      alist[curr_index] = alist[curr_index-1]
      curr_index -= 1
    alist[curr_index] = curr
  return alist
    


